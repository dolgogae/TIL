최신 스프링부트는 spring.jpa.open-in-view가 기본적으로 true로 설정이 되어 있다. -> warn로그가 남는다.

JPA는 database 트랜잭션을 시작할 때 database connection을 가져오게 된다.
OSIV이 켜져 있다면, 트랜잭션이 끝나고도 connection을 반환하지 않는다. lazy loading할 때 데이터를 가져와야 하기 때문에
영속성 컨텍스트가 데이터베이스 connection을 물고 있어야한다.
=> api경우에는 데이터가 client한테 갈때까지, web은 redirect가 날때 까지 물고 있는다.(완전히 끝날때 까지)

너무 오랜시간동안 데이터베이스 connection을 가지고 있다는 단점이 있다.
만약 controller에서 다른 api를 호출시 대기시간만큼 connection을 물고 있을 수도 있다.

OSIV가 꺼져 있다면, 데이터베이스 트랜잭션이 종료될때 같이 connection이 꺼지게 된다.
따라서 connection 리소스를 낭비하지 않는다.
하지만 lazy loading의 경우에는 트랜잭션 안에서 해결해야 한다.
이것의 해결책으로는 다른 클래스로 분리해서 lazy loading을 모두 호출해주는 것을 만드는 것이다.(별도의 query 서비스 로직을 만든다.)
=> command와 query를 분리하는 것이 좋다.
예를 들어) 
OrderService: 핵심 비즈니스 로직
OrderQueryService: 화면이나 api에 맞춘 서비스

성능을 생각한다면 OSIV를 끄는 것이 맞다(그 외의 경우에는 켜는 것이 좋다.)
실시간 API를 사용하는 경우에는 OSIV를 끄는 것이 좋다. 하지만 admin 같이 connection이 많지 않다면 켜는 것이 좋다.
