package sihun.com;

// 상속 vs 컴포지션
// 둘다 재사용성이 목적
// 가능/불가능의 측면에서만 보면 많은 경우에 둘다 사용 가능
// 1. 기계상의 차이 때문에 하나를 골라야할 때
// 상속의 경우 메모리가 한 덩어리, 컴포지션의 경우 메모리가 여러 덩어리
// 메모리가 나눠지는 경우(여러 덩어리)가 성능이 더 안좋다.
// (데이터 버스에서의 오버헤드, 메모리 할당-해제가 한번 씩)

// 2. 용도 때문에 상속을 고를수밖에 없을 때
// ex) 모든 애완동물에게 동시에 명령을 내리고 싶다.
// 다형성은 상속없이는 돌지 않는다.

// 3. 관리의 효율성을 고려할 때
// 동일한 기능을 가진 클래스
// 깊은 상속 관계 -> 코드 수정시 어렵다.

public class Main {
    public static void main(String[] args) {

    }
}
